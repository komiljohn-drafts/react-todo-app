{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js","trash.svg"],"names":["TodoForm","addTodo","useState","id","task","completed","todo","setTodo","className","onSubmit","e","preventDefault","trim","uuid","document","querySelector","style","display","target","tagName","borderColor","localStorage","setItem","type","name","value","onChange","placeholder","Todo","handleChecked","handleRemove","checked","onClick","src","TrashIcon","alt","TodoList","todos","map","key","App","setTodos","useEffect","storedTodo","JSON","parse","getItem","stringify","filter","ReactDom","render","getElementById","module","exports"],"mappings":"0MA4CeA,MAzCf,YAAgC,IAAZC,EAAW,EAAXA,QAAW,EACHC,mBAAS,CAC7BC,GAAI,GACJC,KAAM,GACNC,WAAW,IAJY,mBACpBC,EADoB,KACdC,EADc,KA0B3B,OACI,0BAAMC,UAAU,aAAaC,SApBZ,SAACC,GAClBA,EAAEC,iBACEL,EAAKF,KAAKQ,QACVX,EAAQ,2BAAIK,GAAL,IAAWH,GAAIU,iBACtBC,SAASC,cAAc,cAAcC,MAAMC,QAAU,KAErDH,SAASC,cAAc,cAAcC,MAAMC,QAAU,QACrDH,SAASC,cAAT,UAA0BL,EAAEQ,OAAOC,QAAnC,WAAoDH,MAAMI,YAAc,OAE5Eb,EAAQ,2BAAID,GAAL,IAAWF,KAAM,MACxBiB,aAAaC,QAAQ,OAAQhB,KAWzB,2BACIiB,KAAK,OACLC,KAAK,OACLC,MAAOnB,EAAKF,KACZsB,SAZS,SAAChB,GAClBH,EAAQ,2BAAID,GAAL,IAAWF,KAAMM,EAAEQ,OAAOO,SACjCX,SAASC,cAAc,cAAcC,MAAMC,QAAU,GACrDP,EAAEQ,OAAOF,MAAMI,YAAc,IAUrBO,YAAY,YAEhB,yBAAKnB,UAAU,aAAf,6BACA,4BAAQe,KAAK,UAAb,O,gBCtBGK,MAdf,YAAqD,IAArCtB,EAAoC,EAApCA,KAAMuB,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,aACjC,OACI,6BACI,wBAAItB,UAAU,cACV,2BAAOe,KAAK,WAAWQ,QAASzB,EAAKD,UAAWqB,SAAU,kBAAMG,EAAcvB,EAAKH,OACnF,8BAAOG,EAAKF,MACZ,4BAAQ4B,QAAS,kBAAMF,EAAaxB,EAAKH,MACrC,yBAAK8B,IAAKC,IAAWC,IAAI,oBCQ9BC,MAff,YAA2D,IAAvCC,EAAsC,EAAtCA,MAAOR,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,aACtC,OACI,yBAAKtB,UAAU,cACV6B,EAAMC,KAAI,SAAAhC,GAAI,OACX,kBAAC,EAAD,CACIA,KAAMA,EACNiC,IAAKjC,EAAKH,GACV2B,aAAcA,EACdD,cAAeA,SC4CpBW,MAnDf,WAAgB,IAAD,EACetC,mBAAS,IADxB,mBACJmC,EADI,KACGI,EADH,KAkCX,OA3BAC,qBAAU,WACN,IAAMC,EAAaC,KAAKC,MAAMxB,aAAayB,QAAQ,eAC/CH,GAAYF,EAASE,KAC1B,IAEHD,qBAAU,WACNrB,aAAaC,QAAQ,aAAcsB,KAAKG,UAAUV,MACnD,CAACA,IAqBA,0BAAM7B,UAAU,OACZ,wBAAIA,UAAU,SAAd,cACA,yBAAKA,UAAU,QACX,yBAAKA,UAAU,UACf,kBAAC,EAAD,CAAUP,QApCN,SAACK,GACbmC,EAAS,CAACnC,GAAF,mBAAW+B,QAoCX,kBAAC,EAAD,CACIA,MAAOA,EACPP,aAZK,SAAC3B,GAClBsC,EAASJ,EAAMW,QAAO,SAAA1C,GAAI,OAAIA,EAAKH,KAAOA,OAY9B0B,cA3BM,SAAC1B,GACnBsC,EACIJ,EAAMC,KAAI,SAAAhC,GACN,OAAIA,EAAKH,KAAOA,EACL,2BACAG,GADP,IAEID,WAAYC,EAAKD,YAGlBC,Y,MCxBvB2C,IAASC,OAAO,kBAAC,EAAD,MAASpC,SAASqC,eAAe,U,kBCLjDC,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.c47e4128.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport {v4 as uuid} from 'uuid'\r\n\r\nfunction TodoForm({ addTodo }) {\r\n    const [todo, setTodo] = useState({\r\n        id: \"\",\r\n        task: \"\",\r\n        completed: false\r\n    })\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (todo.task.trim()) {\r\n            addTodo({...todo, id: uuid() })\r\n            document.querySelector('.error-msg').style.display = \"\";\r\n        } else {\r\n            document.querySelector('.error-msg').style.display = \"block\";\r\n            document.querySelector(`${e.target.tagName} input`).style.borderColor = \"red\"\r\n        }\r\n        setTodo({...todo, task: ''})\r\n        localStorage.setItem('task', todo)\r\n    }\r\n    \r\n    const handleChange = (e) => {\r\n        setTodo({...todo, task: e.target.value})\r\n        document.querySelector('.error-msg').style.display = \"\";\r\n        e.target.style.borderColor = ''\r\n    }\r\n\r\n    return (\r\n        <form className=\"todo__form\" onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                name=\"task\"\r\n                value={todo.task}\r\n                onChange={handleChange}\r\n                placeholder=\"todo...\"\r\n            />\r\n            <div className=\"error-msg\">This field can't be blank</div>\r\n            <button type=\"submit\">+</button>\r\n        </form>\r\n      )\r\n}\r\n\r\nexport default TodoForm\r\n","import React from 'react'\r\nimport TrashIcon from '../trash.svg'\r\n\r\nfunction Todo({ todo, handleChecked, handleRemove}) {\r\n    return (\r\n        <div>\r\n            <li className=\"todo__item\">\r\n                <input type=\"checkbox\" checked={todo.completed} onChange={() => handleChecked(todo.id)}/>\r\n                <span>{todo.task}</span>\r\n                <button onClick={() => handleRemove(todo.id)}>\r\n                    <img src={TrashIcon} alt=\"Remove Todo\" />\r\n                </button>\r\n            </li>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo","import React from 'react'\r\nimport Todo from './Todo'\r\n\r\nfunction TodoList({ todos, handleChecked, handleRemove }) {\r\n    return (\r\n        <div className=\"todo__list\">\r\n            {todos.map(todo => (\r\n                <Todo\r\n                    todo={todo}\r\n                    key={todo.id}\r\n                    handleRemove={handleRemove}\r\n                    handleChecked={handleChecked}\r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import React, {useEffect, useState} from 'react'\r\nimport TodoForm from './components/TodoForm'\r\nimport TodoList from './components/TodoList'\r\n\r\nfunction App() {\r\n    const [todos, setTodos] = useState([])\r\n    \r\n    const addTodo = (todo) => {\r\n        setTodos([todo, ...todos])\r\n    }\r\n\r\n    useEffect(() => {\r\n        const storedTodo = JSON.parse(localStorage.getItem('react-todo'))\r\n        if (storedTodo) setTodos(storedTodo)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('react-todo', JSON.stringify(todos))\r\n    }, [todos])\r\n\r\n    const handleChecked = (id) => {\r\n        setTodos(\r\n            todos.map(todo => {\r\n                if (todo.id === id) {\r\n                    return {\r\n                        ...todo,\r\n                        completed: !todo.completed\r\n                    }\r\n                }\r\n                return todo\r\n            })\r\n        )\r\n    }\r\n\r\n    const handleRemove = (id) => {\r\n        setTodos(todos.filter(todo => todo.id !== id))\r\n    }\r\n\r\n    return (\r\n        <main className=\"app\">\r\n            <h1 className=\"title\">React Todo</h1>\r\n            <div className=\"main\">\r\n                <div className=\"lines\"></div>\r\n                <TodoForm addTodo={addTodo} />\r\n                <TodoList\r\n                    todos={todos}\r\n                    handleRemove={handleRemove}\r\n                    handleChecked={handleChecked}\r\n                />\r\n            </div>\r\n        </main>\r\n    )\r\n\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './App'\r\nimport './index.css';\r\n\r\nReactDom.render(<App />, document.getElementById('root'));\r\n","module.exports = __webpack_public_path__ + \"static/media/trash.a3e4c2f7.svg\";"],"sourceRoot":""}